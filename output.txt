============================= test session starts =============================
platform win32 -- Python 3.13.5, pytest-8.4.2, pluggy-1.6.0
rootdir: D:\pet_mail_service
configfile: pyproject.toml
plugins: anyio-4.10.0, asyncio-1.2.0, mock-3.15.1
asyncio: mode=Mode.AUTO, debug=False, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=session
collected 4 items

tests\test_consumer.py FFFF                                              [100%]

================================== FAILURES ===================================
____ test_send_message[Only plain message with no subject and single user] ____

self = <aiosmtplib.smtp.SMTP object at 0x0000023351217E00>, timeout = 60

    async def _create_connection(self, timeout: Optional[float]) -> SMTPResponse:
        if self.loop is None:
            raise RuntimeError("No event loop set")
    
        protocol = SMTPProtocol(loop=self.loop, connection_lost_callback=self.close)
    
        tls_context: Optional[ssl.SSLContext] = None
        ssl_handshake_timeout: Optional[float] = None
        server_hostname: Optional[str] = None
        if self.use_tls:
            tls_context = self._get_tls_context()
            ssl_handshake_timeout = timeout
            server_hostname = self.hostname
    
        if self.sock is not None:
            connect_coro = self.loop.create_connection(
                lambda: protocol,
                sock=self.sock,
                ssl=tls_context,
                server_hostname=server_hostname,
                ssl_handshake_timeout=ssl_handshake_timeout,
            )
        elif self.socket_path is not None:
            connect_coro = self.loop.create_unix_connection(
                lambda: protocol,
                path=self.socket_path,  # type: ignore
                ssl=tls_context,
                server_hostname=server_hostname,
                ssl_handshake_timeout=ssl_handshake_timeout,
            )
        else:
            if self.hostname is None:
                raise RuntimeError("No hostname provided; default should have been set")
            if self.port is None:
                raise RuntimeError("No port provided; default should have been set")
    
            connect_coro = self.loop.create_connection(
                lambda: protocol,
                host=self.hostname,
                port=self.port,
                ssl=tls_context,
                ssl_handshake_timeout=ssl_handshake_timeout,
                local_addr=self.source_address,
            )
    
        try:
>           transport, _ = await asyncio.wait_for(connect_coro, timeout=timeout)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.venv\Lib\site-packages\aiosmtplib\smtp.py:503: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\tasks.py:507: in wait_for
    return await fut
           ^^^^^^^^^
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py:1171: in create_connection
    raise exceptions[0]
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py:1141: in create_connection
    sock = await self._connect_sock(
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py:1044: in _connect_sock
    await self.sock_connect(sock, address)
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\proactor_events.py:726: in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py:804: in _poll
    value = callback(transferred, key, ov)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

trans = 0, key = 0, ov = <_overlapped.Overlapped object at 0x000002335119A2B0>

    def finish_connect(trans, key, ov):
>       ov.getresult()
E       ConnectionRefusedError: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение

C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py:600: ConnectionRefusedError

The above exception was the direct cause of the following exception:

kafka_broker = <faststream.kafka.broker.broker.KafkaBroker object at 0x0000023350E53620>
mocker = <pytest_mock.plugin.MockerFixture object at 0x0000023351217B60>
recipients = ['user@mail.ru'], plain = 'Сообщение', html = None, subject = None

    @pytest.mark.asyncio
    @pytest.mark.parametrize('recipients, plain, html, subject',
                             [param(['user@mail.ru'], 'Сообщение',
                                   None, None,
                                   id='Only plain message with no subject and single user'),
                             param(['user@mail.ru', 'user2@mail.ru'], 'Сообщение',
                                   None, None,
                                   id='Only plain message with no subject and mulitply user'),
                             param(['user@mail.ru'], 'Сообщение',
                                   None, 'Тема',
                                   id='Only plain message with subject and single user'),
                             param(['user@mail.ru'], 'Сообщение',
                                   '<html><body>Сообщение</body></html>', 'Тема',
                                   id='Only both types of message with  subject and single user')
                             ]
                             )
    async def test_send_message(kafka_broker, mocker, recipients, plain, html, subject):
        message = EmailMessage(recipients=recipients,
                               plain=plain,
                               html=html,
                               subject=subject)
        # async def check_message(incoming_message: EmailMessage):
        #     assert incoming_message == message
        mocked_send_message = mocker.patch('main.send_message')
        await kafka_broker.publish(message, topic='send-email-message', key=b'key')
>       await send_email_consumer.wait_call(timeout=3)

tests\test_consumer.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.venv\Lib\site-packages\faststream\broker\wrapper\call.py:110: in wait_call
    await self.future
.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py:166: in call
    result = await call(message)
             ^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\faststream\broker\middlewares\base.py:73: in consume_scope
    await self.after_consume(err)
.venv\Lib\site-packages\faststream\broker\middlewares\base.py:54: in after_consume
    raise err
.venv\Lib\site-packages\faststream\broker\middlewares\base.py:64: in consume_scope
    result = await call_next(await self.on_consume(msg))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\faststream\broker\wrapper\call.py:202: in decode_wrapper
    return await func(msg)
           ^^^^^^^^^^^^^^^
.venv\Lib\site-packages\fast_depends\use.py:148: in injected_wrapper
    r = await real_model.asolve(
.venv\Lib\site-packages\fast_depends\core\model.py:542: in asolve
    response = await run_async(call, *final_args, **final_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\fast_depends\utils.py:48: in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\faststream\utils\functions.py:53: in to_async_wrapper
    return await call_or_await(func, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\fast_depends\utils.py:48: in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
main.py:20: in send_email_consumer
    await send_message(body)
email_helper.py:23: in send_message
    await smtp_client.connect()
.venv\Lib\site-packages\aiosmtplib\smtp.py:453: in connect
    raise exc
.venv\Lib\site-packages\aiosmtplib\smtp.py:446: in connect
    response = await self._create_connection(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <aiosmtplib.smtp.SMTP object at 0x0000023351217E00>, timeout = 60

    async def _create_connection(self, timeout: Optional[float]) -> SMTPResponse:
        if self.loop is None:
            raise RuntimeError("No event loop set")
    
        protocol = SMTPProtocol(loop=self.loop, connection_lost_callback=self.close)
    
        tls_context: Optional[ssl.SSLContext] = None
        ssl_handshake_timeout: Optional[float] = None
        server_hostname: Optional[str] = None
        if self.use_tls:
            tls_context = self._get_tls_context()
            ssl_handshake_timeout = timeout
            server_hostname = self.hostname
    
        if self.sock is not None:
            connect_coro = self.loop.create_connection(
                lambda: protocol,
                sock=self.sock,
                ssl=tls_context,
                server_hostname=server_hostname,
                ssl_handshake_timeout=ssl_handshake_timeout,
            )
        elif self.socket_path is not None:
            connect_coro = self.loop.create_unix_connection(
                lambda: protocol,
                path=self.socket_path,  # type: ignore
                ssl=tls_context,
                server_hostname=server_hostname,
                ssl_handshake_timeout=ssl_handshake_timeout,
            )
        else:
            if self.hostname is None:
                raise RuntimeError("No hostname provided; default should have been set")
            if self.port is None:
                raise RuntimeError("No port provided; default should have been set")
    
            connect_coro = self.loop.create_connection(
                lambda: protocol,
                host=self.hostname,
                port=self.port,
                ssl=tls_context,
                ssl_handshake_timeout=ssl_handshake_timeout,
                local_addr=self.source_address,
            )
    
        try:
            transport, _ = await asyncio.wait_for(connect_coro, timeout=timeout)
        except (TimeoutError, asyncio.TimeoutError) as exc:
            raise SMTPConnectTimeoutError(
                f"Timed out connecting to {self.hostname} on port {self.port}"
            ) from exc
        except OSError as exc:
>           raise SMTPConnectError(
                f"Error connecting to {self.hostname} on port {self.port}: {exc}"
            ) from exc
E           aiosmtplib.errors.SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение

.venv\Lib\site-packages\aiosmtplib\smtp.py:509: SMTPConnectError
---------------------------- Captured stdout setup ----------------------------
2025-09-17 22:21:36,444 [32mINFO[0m     - send-email-message | email |            - `SendEmailConsumer` waiting for messages
2025-09-17 22:21:39,455 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-5491d0cb-fa3d-4da9-862b-f24e3b0078d3 assigned to partitions: {TopicPartition(topic='send-email-message', partition=0)}
2025-09-17 22:21:39,459 [32mINFO[0m     - send-email-message | email |            - `SendEmailConsumer` waiting for messages
2025-09-17 22:21:39,462 [32mINFO[0m     - send-email-message | email | 3-17581368 - Received
2025-09-17 22:21:42,474 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-ec071ac3-8f64-4387-8009-0fefe5c0a4e9 assigned to partitions: set()
2025-09-17 22:21:42,474 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:21:42,474 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-5491d0cb-fa3d-4da9-862b-f24e3b0078d3 assigned to partitions: {TopicPartition(topic='send-email-message', partition=0)}
----------------------------- Captured log setup ------------------------------
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
---------------------------- Captured stdout call -----------------------------
2025-09-17 22:21:43,561 [31mERROR[0m    - send-email-message | email | 3-17581368 - SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 503, in _create_connection
    transport, _ = await asyncio.wait_for(connect_coro, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\tasks.py", line 507, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1171, in create_connection
    raise exceptions[0]
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\usecase.py", line 373, in process_message
    await h.call(
    ...<5 lines>...
    )
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 174, in call
    raise e
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 166, in call
    result = await call(message)
             ^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 73, in consume_scope
    await self.after_consume(err)
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 54, in after_consume
    raise err
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 64, in consume_scope
    result = await call_next(await self.on_consume(msg))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\wrapper\call.py", line 202, in decode_wrapper
    return await func(msg)
           ^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\use.py", line 148, in injected_wrapper
    r = await real_model.asolve(
        ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\core\model.py", line 542, in asolve
    response = await run_async(call, *final_args, **final_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\utils\functions.py", line 53, in to_async_wrapper
    return await call_or_await(func, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\main.py", line 20, in send_email_consumer
    await send_message(body)
  File "D:\pet_mail_service\email_helper.py", line 23, in send_message
    await smtp_client.connect()
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 453, in connect
    raise exc
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 446, in connect
    response = await self._create_connection(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        timeout=self.timeout if timeout is Default.token else timeout
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 509, in _create_connection
    raise SMTPConnectError(
        f"Error connecting to {self.hostname} on port {self.port}: {exc}"
    ) from exc
aiosmtplib.errors.SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
2025-09-17 22:21:43,566 [32mINFO[0m     - send-email-message | email | 3-17581368 - Processed
2025-09-17 22:21:43,567 [32mINFO[0m     - send-email-message | email | 3-17581368 - Received
-------------------------- Captured stdout teardown ---------------------------
2025-09-17 22:21:47,846 [31mERROR[0m    - send-email-message | email | 3-17581368 - SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 503, in _create_connection
    transport, _ = await asyncio.wait_for(connect_coro, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\tasks.py", line 507, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1171, in create_connection
    raise exceptions[0]
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\usecase.py", line 373, in process_message
    await h.call(
    ...<5 lines>...
    )
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 174, in call
    raise e
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 166, in call
    result = await call(message)
             ^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 73, in consume_scope
    await self.after_consume(err)
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 54, in after_consume
    raise err
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 64, in consume_scope
    result = await call_next(await self.on_consume(msg))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\wrapper\call.py", line 202, in decode_wrapper
    return await func(msg)
           ^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\use.py", line 148, in injected_wrapper
    r = await real_model.asolve(
        ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\core\model.py", line 542, in asolve
    response = await run_async(call, *final_args, **final_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\utils\functions.py", line 53, in to_async_wrapper
    return await call_or_await(func, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\main.py", line 20, in send_email_consumer
    await send_message(body)
  File "D:\pet_mail_service\email_helper.py", line 23, in send_message
    await smtp_client.connect()
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 453, in connect
    raise exc
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 446, in connect
    response = await self._create_connection(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        timeout=self.timeout if timeout is Default.token else timeout
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 509, in _create_connection
    raise SMTPConnectError(
        f"Error connecting to {self.hostname} on port {self.port}: {exc}"
    ) from exc
aiosmtplib.errors.SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
2025-09-17 22:21:47,848 [32mINFO[0m     - send-email-message | email | 3-17581368 - Processed
___ test_send_message[Only plain message with no subject and mulitply user] ___

self = <AsyncMock name='send_message' id='2419427734736'>
args = (EmailMessage(recipients=['user@mail.ru', 'user2@mail.ru'], subject=None, plain='Сообщение', html=None),)
kwargs = {}
expected = call(EmailMessage(recipients=['user@mail.ru', 'user2@mail.ru'], subject=None, plain='Сообщение', html=None))
_error_message = <function AsyncMockMixin.assert_awaited_with.<locals>._error_message at 0x00000233518279C0>
actual = call(EmailMessage(recipients=['user@mail.ru'], subject='Тема', plain='Сообщение', html='<html><body>Сообщение</body></html>'))
cause = None

    def assert_awaited_with(self, /, *args, **kwargs):
        """
        Assert that the last await was with the specified arguments.
        """
        if self.await_args is None:
            expected = self._format_mock_call_signature(args, kwargs)
            raise AssertionError(f'Expected await: {expected}\nNot awaited')
    
        def _error_message():
            msg = self._format_mock_failure_message(args, kwargs, action='await')
            return msg
    
        expected = self._call_matcher(_Call((args, kwargs), two=True))
        actual = self._call_matcher(self.await_args)
        if actual != expected:
            cause = expected if isinstance(expected, Exception) else None
>           raise AssertionError(_error_message()) from cause
E           AssertionError: expected await not found.
E           Expected: send_message(EmailMessage(recipients=['user@mail.ru', 'user2@mail.ru'], subject=None, plain='Сообщение', html=None))
E             Actual: send_message(EmailMessage(recipients=['user@mail.ru'], subject='Тема', plain='Сообщение', html='<html><body>Сообщение</body></html>'))

C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py:2382: AssertionError

During handling of the above exception, another exception occurred:

self = <AsyncMock name='send_message' id='2419427734736'>
args = (EmailMessage(recipients=['user@mail.ru', 'user2@mail.ru'], subject=None, plain='Сообщение', html=None),)
kwargs = {}

    def assert_awaited_once_with(self, /, *args, **kwargs):
        """
        Assert that the mock was awaited exactly once and with the specified
        arguments.
        """
        if not self.await_count == 1:
            msg = (f"Expected {self._mock_name or 'mock'} to have been awaited once."
                   f" Awaited {self.await_count} times.")
            raise AssertionError(msg)
>       return self.assert_awaited_with(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AssertionError: expected await not found.
E       Expected: send_message(EmailMessage(recipients=['user@mail.ru', 'user2@mail.ru'], subject=None, plain='Сообщение', html=None))
E         Actual: send_message(EmailMessage(recipients=['user@mail.ru'], subject='Тема', plain='Сообщение', html='<html><body>Сообщение</body></html>'))
E       
E       pytest introspection follows:
E       
E       Args:
E       assert (EmailMessage...dy></html>'),) == (EmailMessage..., html=None),)
E         
E         At index 0 diff: EmailMessage(recipients=['user@mail.ru'], subject='Тема', plain='Сообщение', html='<html><body>Сообщение</body></html>') != EmailMessage(recipients=['user@mail.ru', 'user2@mail.ru'], subject=None, plain='Сообщение', html=None)
E         Use -v to get more diff

C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py:2393: AssertionError

During handling of the above exception, another exception occurred:

kafka_broker = <faststream.kafka.broker.broker.KafkaBroker object at 0x0000023350E53620>
mocker = <pytest_mock.plugin.MockerFixture object at 0x000002335121B890>
recipients = ['user@mail.ru', 'user2@mail.ru'], plain = 'Сообщение', html = None
subject = None

    @pytest.mark.asyncio
    @pytest.mark.parametrize('recipients, plain, html, subject',
                             [param(['user@mail.ru'], 'Сообщение',
                                   None, None,
                                   id='Only plain message with no subject and single user'),
                             param(['user@mail.ru', 'user2@mail.ru'], 'Сообщение',
                                   None, None,
                                   id='Only plain message with no subject and mulitply user'),
                             param(['user@mail.ru'], 'Сообщение',
                                   None, 'Тема',
                                   id='Only plain message with subject and single user'),
                             param(['user@mail.ru'], 'Сообщение',
                                   '<html><body>Сообщение</body></html>', 'Тема',
                                   id='Only both types of message with  subject and single user')
                             ]
                             )
    async def test_send_message(kafka_broker, mocker, recipients, plain, html, subject):
        message = EmailMessage(recipients=recipients,
                               plain=plain,
                               html=html,
                               subject=subject)
        # async def check_message(incoming_message: EmailMessage):
        #     assert incoming_message == message
        mocked_send_message = mocker.patch('main.send_message')
        await kafka_broker.publish(message, topic='send-email-message', key=b'key')
        await send_email_consumer.wait_call(timeout=3)
>       mocked_send_message.assert_awaited_once_with(message)
E       AssertionError: expected await not found.
E       Expected: send_message(EmailMessage(recipients=['user@mail.ru', 'user2@mail.ru'], subject=None, plain='Сообщение', html=None))
E         Actual: send_message(EmailMessage(recipients=['user@mail.ru'], subject='Тема', plain='Сообщение', html='<html><body>Сообщение</body></html>'))
E       
E       pytest introspection follows:
E       
E       Args:
E       assert (EmailMessage...dy></html>'),) == (EmailMessage..., html=None),)
E         
E         At index 0 diff: EmailMessage(recipients=['user@mail.ru'], subject='Тема', plain='Сообщение', html='<html><body>Сообщение</body></html>') != EmailMessage(recipients=['user@mail.ru', 'user2@mail.ru'], subject=None, plain='Сообщение', html=None)
E         Use -v to get more diff

tests\test_consumer.py:34: AssertionError
---------------------------- Captured stdout setup ----------------------------
2025-09-17 22:21:47,865 [32mINFO[0m     - send-email-message | email |            - `SendEmailConsumer` waiting for messages
2025-09-17 22:21:48,489 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-b8aa66bb-2571-419c-be19-cd171432f62c assigned to partitions: set()
2025-09-17 22:21:48,489 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:21:48,490 [32mINFO[0m     - send-email-message | email |            - `SendEmailConsumer` waiting for messages
2025-09-17 22:21:48,490 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-5491d0cb-fa3d-4da9-862b-f24e3b0078d3 assigned to partitions: {TopicPartition(topic='send-email-message', partition=0)}
2025-09-17 22:21:51,504 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-391b7386-6e5b-474f-9b1f-a594ae9031f0 assigned to partitions: {TopicPartition(topic='send-email-message', partition=0)}
2025-09-17 22:21:51,504 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-b8aa66bb-2571-419c-be19-cd171432f62c assigned to partitions: set()
2025-09-17 22:21:51,504 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:21:51,505 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-5491d0cb-fa3d-4da9-862b-f24e3b0078d3 assigned to partitions: set()
2025-09-17 22:21:51,505 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
----------------------------- Captured log setup ------------------------------
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
---------------------------- Captured stdout call -----------------------------
2025-09-17 22:21:51,508 [32mINFO[0m     - send-email-message | email | 3-17581368 - Received
2025-09-17 22:21:51,511 [32mINFO[0m     - send-email-message | email | 3-17581368 - Processed
2025-09-17 22:21:51,512 [32mINFO[0m     - send-email-message | email | 4-17581369 - Received
-------------------------- Captured stdout teardown ---------------------------
2025-09-17 22:21:55,659 [31mERROR[0m    - send-email-message | email | 4-17581369 - SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 503, in _create_connection
    transport, _ = await asyncio.wait_for(connect_coro, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\tasks.py", line 507, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1171, in create_connection
    raise exceptions[0]
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\usecase.py", line 373, in process_message
    await h.call(
    ...<5 lines>...
    )
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 174, in call
    raise e
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 166, in call
    result = await call(message)
             ^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 73, in consume_scope
    await self.after_consume(err)
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 54, in after_consume
    raise err
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 64, in consume_scope
    result = await call_next(await self.on_consume(msg))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\wrapper\call.py", line 202, in decode_wrapper
    return await func(msg)
           ^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\use.py", line 148, in injected_wrapper
    r = await real_model.asolve(
        ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\core\model.py", line 542, in asolve
    response = await run_async(call, *final_args, **final_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\utils\functions.py", line 53, in to_async_wrapper
    return await call_or_await(func, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\main.py", line 20, in send_email_consumer
    await send_message(body)
  File "D:\pet_mail_service\email_helper.py", line 23, in send_message
    await smtp_client.connect()
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 453, in connect
    raise exc
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 446, in connect
    response = await self._create_connection(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        timeout=self.timeout if timeout is Default.token else timeout
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 509, in _create_connection
    raise SMTPConnectError(
        f"Error connecting to {self.hostname} on port {self.port}: {exc}"
    ) from exc
aiosmtplib.errors.SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
2025-09-17 22:21:55,662 [32mINFO[0m     - send-email-message | email | 4-17581369 - Processed
_____ test_send_message[Only plain message with subject and single user] ______

delay = 3, shield = False

    @contextmanager
    def fail_after(
        delay: float | None, shield: bool = False
    ) -> Generator[CancelScope, None, None]:
        """
        Create a context manager which raises a :class:`TimeoutError` if does not finish in
        time.
    
        :param delay: maximum allowed time (in seconds) before raising the exception, or
            ``None`` to disable the timeout
        :param shield: ``True`` to shield the cancel scope from external cancellation
        :return: a context manager that yields a cancel scope
        :rtype: :class:`~typing.ContextManager`\\[:class:`~anyio.CancelScope`\\]
    
        """
        current_time = get_async_backend().current_time
        deadline = (current_time() + delay) if delay is not None else math.inf
        with get_async_backend().create_cancel_scope(
            deadline=deadline, shield=shield
        ) as cancel_scope:
>           yield cancel_scope

.venv\Lib\site-packages\anyio\_core\_tasks.py:115: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <faststream.broker.wrapper.call.HandlerCallWrapper object at 0x00000233510E8FE0>
timeout = 3

    async def wait_call(self, timeout: Optional[float] = None) -> None:
        """Waits for a call with an optional timeout."""
        assert (  # nosec B101
            self.future is not None
        ), "You can use this method only with TestClient"
        with anyio.fail_after(timeout):
>           await self.future
E           asyncio.exceptions.CancelledError: Cancelled by cancel scope 233516fcf70

.venv\Lib\site-packages\faststream\broker\wrapper\call.py:110: CancelledError

During handling of the above exception, another exception occurred:

kafka_broker = <faststream.kafka.broker.broker.KafkaBroker object at 0x0000023350E53620>
mocker = <pytest_mock.plugin.MockerFixture object at 0x000002335182DF90>
recipients = ['user@mail.ru'], plain = 'Сообщение', html = None
subject = 'Тема'

    @pytest.mark.asyncio
    @pytest.mark.parametrize('recipients, plain, html, subject',
                             [param(['user@mail.ru'], 'Сообщение',
                                   None, None,
                                   id='Only plain message with no subject and single user'),
                             param(['user@mail.ru', 'user2@mail.ru'], 'Сообщение',
                                   None, None,
                                   id='Only plain message with no subject and mulitply user'),
                             param(['user@mail.ru'], 'Сообщение',
                                   None, 'Тема',
                                   id='Only plain message with subject and single user'),
                             param(['user@mail.ru'], 'Сообщение',
                                   '<html><body>Сообщение</body></html>', 'Тема',
                                   id='Only both types of message with  subject and single user')
                             ]
                             )
    async def test_send_message(kafka_broker, mocker, recipients, plain, html, subject):
        message = EmailMessage(recipients=recipients,
                               plain=plain,
                               html=html,
                               subject=subject)
        # async def check_message(incoming_message: EmailMessage):
        #     assert incoming_message == message
        mocked_send_message = mocker.patch('main.send_message')
        await kafka_broker.publish(message, topic='send-email-message', key=b'key')
>       await send_email_consumer.wait_call(timeout=3)

tests\test_consumer.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.venv\Lib\site-packages\faststream\broker\wrapper\call.py:109: in wait_call
    with anyio.fail_after(timeout):
         ^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\contextlib.py:162: in __exit__
    self.gen.throw(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

delay = 3, shield = False

    @contextmanager
    def fail_after(
        delay: float | None, shield: bool = False
    ) -> Generator[CancelScope, None, None]:
        """
        Create a context manager which raises a :class:`TimeoutError` if does not finish in
        time.
    
        :param delay: maximum allowed time (in seconds) before raising the exception, or
            ``None`` to disable the timeout
        :param shield: ``True`` to shield the cancel scope from external cancellation
        :return: a context manager that yields a cancel scope
        :rtype: :class:`~typing.ContextManager`\\[:class:`~anyio.CancelScope`\\]
    
        """
        current_time = get_async_backend().current_time
        deadline = (current_time() + delay) if delay is not None else math.inf
        with get_async_backend().create_cancel_scope(
            deadline=deadline, shield=shield
        ) as cancel_scope:
            yield cancel_scope
    
        if cancel_scope.cancelled_caught and current_time() >= cancel_scope.deadline:
>           raise TimeoutError
E           TimeoutError

.venv\Lib\site-packages\anyio\_core\_tasks.py:118: TimeoutError
---------------------------- Captured stdout setup ----------------------------
2025-09-17 22:21:55,679 [32mINFO[0m     - send-email-message | email |            - `SendEmailConsumer` waiting for messages
2025-09-17 22:21:57,533 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-dab9691c-9af0-4266-90fa-8ccb7c690308 assigned to partitions: set()
2025-09-17 22:21:57,534 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:21:57,535 [32mINFO[0m     - send-email-message | email |            - `SendEmailConsumer` waiting for messages
2025-09-17 22:21:57,535 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-5491d0cb-fa3d-4da9-862b-f24e3b0078d3 assigned to partitions: {TopicPartition(topic='send-email-message', partition=0)}
2025-09-17 22:21:57,535 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-b8aa66bb-2571-419c-be19-cd171432f62c assigned to partitions: set()
2025-09-17 22:21:57,535 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:22:00,542 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-fe09790a-721d-4cc5-a70e-1d39a4433536 assigned to partitions: set()
2025-09-17 22:22:00,542 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:22:00,542 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-dab9691c-9af0-4266-90fa-8ccb7c690308 assigned to partitions: set()
2025-09-17 22:22:00,542 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:22:00,543 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-5491d0cb-fa3d-4da9-862b-f24e3b0078d3 assigned to partitions: {TopicPartition(topic='send-email-message', partition=0)}
2025-09-17 22:22:00,543 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-b8aa66bb-2571-419c-be19-cd171432f62c assigned to partitions: set()
2025-09-17 22:22:00,543 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
----------------------------- Captured log setup ------------------------------
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
_ test_send_message[Only both types of message with  subject and single user] _

self = <aiosmtplib.smtp.SMTP object at 0x000002335295FBB0>, timeout = 60

    async def _create_connection(self, timeout: Optional[float]) -> SMTPResponse:
        if self.loop is None:
            raise RuntimeError("No event loop set")
    
        protocol = SMTPProtocol(loop=self.loop, connection_lost_callback=self.close)
    
        tls_context: Optional[ssl.SSLContext] = None
        ssl_handshake_timeout: Optional[float] = None
        server_hostname: Optional[str] = None
        if self.use_tls:
            tls_context = self._get_tls_context()
            ssl_handshake_timeout = timeout
            server_hostname = self.hostname
    
        if self.sock is not None:
            connect_coro = self.loop.create_connection(
                lambda: protocol,
                sock=self.sock,
                ssl=tls_context,
                server_hostname=server_hostname,
                ssl_handshake_timeout=ssl_handshake_timeout,
            )
        elif self.socket_path is not None:
            connect_coro = self.loop.create_unix_connection(
                lambda: protocol,
                path=self.socket_path,  # type: ignore
                ssl=tls_context,
                server_hostname=server_hostname,
                ssl_handshake_timeout=ssl_handshake_timeout,
            )
        else:
            if self.hostname is None:
                raise RuntimeError("No hostname provided; default should have been set")
            if self.port is None:
                raise RuntimeError("No port provided; default should have been set")
    
            connect_coro = self.loop.create_connection(
                lambda: protocol,
                host=self.hostname,
                port=self.port,
                ssl=tls_context,
                ssl_handshake_timeout=ssl_handshake_timeout,
                local_addr=self.source_address,
            )
    
        try:
>           transport, _ = await asyncio.wait_for(connect_coro, timeout=timeout)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.venv\Lib\site-packages\aiosmtplib\smtp.py:503: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\tasks.py:507: in wait_for
    return await fut
           ^^^^^^^^^
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py:1171: in create_connection
    raise exceptions[0]
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py:1141: in create_connection
    sock = await self._connect_sock(
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py:1044: in _connect_sock
    await self.sock_connect(sock, address)
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\proactor_events.py:726: in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py:804: in _poll
    value = callback(transferred, key, ov)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

trans = 0, key = 0, ov = <_overlapped.Overlapped object at 0x000002335191D770>

    def finish_connect(trans, key, ov):
>       ov.getresult()
E       ConnectionRefusedError: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение

C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py:600: ConnectionRefusedError

The above exception was the direct cause of the following exception:

kafka_broker = <faststream.kafka.broker.broker.KafkaBroker object at 0x0000023350E53620>
mocker = <pytest_mock.plugin.MockerFixture object at 0x0000023351236FD0>
recipients = ['user@mail.ru'], plain = 'Сообщение'
html = '<html><body>Сообщение</body></html>', subject = 'Тема'

    @pytest.mark.asyncio
    @pytest.mark.parametrize('recipients, plain, html, subject',
                             [param(['user@mail.ru'], 'Сообщение',
                                   None, None,
                                   id='Only plain message with no subject and single user'),
                             param(['user@mail.ru', 'user2@mail.ru'], 'Сообщение',
                                   None, None,
                                   id='Only plain message with no subject and mulitply user'),
                             param(['user@mail.ru'], 'Сообщение',
                                   None, 'Тема',
                                   id='Only plain message with subject and single user'),
                             param(['user@mail.ru'], 'Сообщение',
                                   '<html><body>Сообщение</body></html>', 'Тема',
                                   id='Only both types of message with  subject and single user')
                             ]
                             )
    async def test_send_message(kafka_broker, mocker, recipients, plain, html, subject):
        message = EmailMessage(recipients=recipients,
                               plain=plain,
                               html=html,
                               subject=subject)
        # async def check_message(incoming_message: EmailMessage):
        #     assert incoming_message == message
        mocked_send_message = mocker.patch('main.send_message')
        await kafka_broker.publish(message, topic='send-email-message', key=b'key')
>       await send_email_consumer.wait_call(timeout=3)

tests\test_consumer.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
.venv\Lib\site-packages\faststream\broker\wrapper\call.py:110: in wait_call
    await self.future
.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py:166: in call
    result = await call(message)
             ^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\faststream\broker\middlewares\base.py:73: in consume_scope
    await self.after_consume(err)
.venv\Lib\site-packages\faststream\broker\middlewares\base.py:54: in after_consume
    raise err
.venv\Lib\site-packages\faststream\broker\middlewares\base.py:64: in consume_scope
    result = await call_next(await self.on_consume(msg))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\faststream\broker\wrapper\call.py:202: in decode_wrapper
    return await func(msg)
           ^^^^^^^^^^^^^^^
.venv\Lib\site-packages\fast_depends\use.py:148: in injected_wrapper
    r = await real_model.asolve(
.venv\Lib\site-packages\fast_depends\core\model.py:542: in asolve
    response = await run_async(call, *final_args, **final_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\fast_depends\utils.py:48: in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\faststream\utils\functions.py:53: in to_async_wrapper
    return await call_or_await(func, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.venv\Lib\site-packages\fast_depends\utils.py:48: in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
main.py:20: in send_email_consumer
    await send_message(body)
email_helper.py:23: in send_message
    await smtp_client.connect()
.venv\Lib\site-packages\aiosmtplib\smtp.py:453: in connect
    raise exc
.venv\Lib\site-packages\aiosmtplib\smtp.py:446: in connect
    response = await self._create_connection(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <aiosmtplib.smtp.SMTP object at 0x000002335295FBB0>, timeout = 60

    async def _create_connection(self, timeout: Optional[float]) -> SMTPResponse:
        if self.loop is None:
            raise RuntimeError("No event loop set")
    
        protocol = SMTPProtocol(loop=self.loop, connection_lost_callback=self.close)
    
        tls_context: Optional[ssl.SSLContext] = None
        ssl_handshake_timeout: Optional[float] = None
        server_hostname: Optional[str] = None
        if self.use_tls:
            tls_context = self._get_tls_context()
            ssl_handshake_timeout = timeout
            server_hostname = self.hostname
    
        if self.sock is not None:
            connect_coro = self.loop.create_connection(
                lambda: protocol,
                sock=self.sock,
                ssl=tls_context,
                server_hostname=server_hostname,
                ssl_handshake_timeout=ssl_handshake_timeout,
            )
        elif self.socket_path is not None:
            connect_coro = self.loop.create_unix_connection(
                lambda: protocol,
                path=self.socket_path,  # type: ignore
                ssl=tls_context,
                server_hostname=server_hostname,
                ssl_handshake_timeout=ssl_handshake_timeout,
            )
        else:
            if self.hostname is None:
                raise RuntimeError("No hostname provided; default should have been set")
            if self.port is None:
                raise RuntimeError("No port provided; default should have been set")
    
            connect_coro = self.loop.create_connection(
                lambda: protocol,
                host=self.hostname,
                port=self.port,
                ssl=tls_context,
                ssl_handshake_timeout=ssl_handshake_timeout,
                local_addr=self.source_address,
            )
    
        try:
            transport, _ = await asyncio.wait_for(connect_coro, timeout=timeout)
        except (TimeoutError, asyncio.TimeoutError) as exc:
            raise SMTPConnectTimeoutError(
                f"Timed out connecting to {self.hostname} on port {self.port}"
            ) from exc
        except OSError as exc:
>           raise SMTPConnectError(
                f"Error connecting to {self.hostname} on port {self.port}: {exc}"
            ) from exc
E           aiosmtplib.errors.SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение

.venv\Lib\site-packages\aiosmtplib\smtp.py:509: SMTPConnectError
---------------------------- Captured stdout setup ----------------------------
2025-09-17 22:22:03,576 [32mINFO[0m     - send-email-message | email |            - `SendEmailConsumer` waiting for messages
2025-09-17 22:22:06,558 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-5491d0cb-fa3d-4da9-862b-f24e3b0078d3 assigned to partitions: set()
2025-09-17 22:22:06,558 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:22:06,558 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-dab9691c-9af0-4266-90fa-8ccb7c690308 assigned to partitions: set()
2025-09-17 22:22:06,558 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:22:06,559 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-38912d3e-1332-4c6c-af27-32e439be5978 assigned to partitions: {TopicPartition(topic='send-email-message', partition=0)}
2025-09-17 22:22:06,560 [32mINFO[0m     - send-email-message | email |            - `SendEmailConsumer` waiting for messages
2025-09-17 22:22:06,560 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-b8aa66bb-2571-419c-be19-cd171432f62c assigned to partitions: set()
2025-09-17 22:22:06,560 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:22:06,562 [32mINFO[0m     - send-email-message | email | 4-17581369 - Received
2025-09-17 22:22:09,567 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-8298fd14-31e8-4de2-9cd7-8ddf0a88a088 assigned to partitions: set()
2025-09-17 22:22:09,567 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:22:09,567 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-5491d0cb-fa3d-4da9-862b-f24e3b0078d3 assigned to partitions: set()
2025-09-17 22:22:09,567 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:22:09,567 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-b8aa66bb-2571-419c-be19-cd171432f62c assigned to partitions: set()
2025-09-17 22:22:09,567 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
2025-09-17 22:22:09,568 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-dab9691c-9af0-4266-90fa-8ccb7c690308 assigned to partitions: set()
2025-09-17 22:22:09,568 [33mWARNING[0m  -                    |       |            - Consumer in group email has no partition assignments - this could be temporary, e.g. during a rolling update. A separate warning will be logged if this condition persists for 120 seconds.
----------------------------- Captured log setup ------------------------------
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
WARNING  aiokafka.consumer.group_coordinator:group_coordinator.py:842 Heartbeat failed for group email because it is rebalancing
---------------------------- Captured stdout call -----------------------------
2025-09-17 22:22:09,569 [32mINFO[0m     -                    |       |            - Consumer faststream-0.5.48-38912d3e-1332-4c6c-af27-32e439be5978 assigned to partitions: {TopicPartition(topic='send-email-message', partition=0)}
2025-09-17 22:22:10,668 [31mERROR[0m    - send-email-message | email | 4-17581369 - SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 503, in _create_connection
    transport, _ = await asyncio.wait_for(connect_coro, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\tasks.py", line 507, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1171, in create_connection
    raise exceptions[0]
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\usecase.py", line 373, in process_message
    await h.call(
    ...<5 lines>...
    )
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 174, in call
    raise e
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 166, in call
    result = await call(message)
             ^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 73, in consume_scope
    await self.after_consume(err)
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 54, in after_consume
    raise err
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 64, in consume_scope
    result = await call_next(await self.on_consume(msg))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\wrapper\call.py", line 202, in decode_wrapper
    return await func(msg)
           ^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\use.py", line 148, in injected_wrapper
    r = await real_model.asolve(
        ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\core\model.py", line 542, in asolve
    response = await run_async(call, *final_args, **final_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\utils\functions.py", line 53, in to_async_wrapper
    return await call_or_await(func, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\main.py", line 20, in send_email_consumer
    await send_message(body)
  File "D:\pet_mail_service\email_helper.py", line 23, in send_message
    await smtp_client.connect()
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 453, in connect
    raise exc
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 446, in connect
    response = await self._create_connection(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        timeout=self.timeout if timeout is Default.token else timeout
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 509, in _create_connection
    raise SMTPConnectError(
        f"Error connecting to {self.hostname} on port {self.port}: {exc}"
    ) from exc
aiosmtplib.errors.SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
2025-09-17 22:22:10,670 [32mINFO[0m     - send-email-message | email | 4-17581369 - Processed
2025-09-17 22:22:10,671 [32mINFO[0m     - send-email-message | email | 4-17581369 - Received
-------------------------- Captured stdout teardown ---------------------------
2025-09-17 22:22:14,842 [31mERROR[0m    - send-email-message | email | 4-17581369 - SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 503, in _create_connection
    transport, _ = await asyncio.wait_for(connect_coro, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\tasks.py", line 507, in wait_for
    return await fut
           ^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1171, in create_connection
    raise exceptions[0]
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Users\Григорий\AppData\Local\Programs\Python\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\usecase.py", line 373, in process_message
    await h.call(
    ...<5 lines>...
    )
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 174, in call
    raise e
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\subscriber\call_item.py", line 166, in call
    result = await call(message)
             ^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 73, in consume_scope
    await self.after_consume(err)
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 54, in after_consume
    raise err
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\middlewares\base.py", line 64, in consume_scope
    result = await call_next(await self.on_consume(msg))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\broker\wrapper\call.py", line 202, in decode_wrapper
    return await func(msg)
           ^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\use.py", line 148, in injected_wrapper
    r = await real_model.asolve(
        ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\core\model.py", line 542, in asolve
    response = await run_async(call, *final_args, **final_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\faststream\utils\functions.py", line 53, in to_async_wrapper
    return await call_or_await(func, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\.venv\Lib\site-packages\fast_depends\utils.py", line 48, in run_async
    return await cast(Callable[P, Awaitable[T]], func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\pet_mail_service\main.py", line 20, in send_email_consumer
    await send_message(body)
  File "D:\pet_mail_service\email_helper.py", line 23, in send_message
    await smtp_client.connect()
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 453, in connect
    raise exc
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 446, in connect
    response = await self._create_connection(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        timeout=self.timeout if timeout is Default.token else timeout
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\pet_mail_service\.venv\Lib\site-packages\aiosmtplib\smtp.py", line 509, in _create_connection
    raise SMTPConnectError(
        f"Error connecting to {self.hostname} on port {self.port}: {exc}"
    ) from exc
aiosmtplib.errors.SMTPConnectError: Error connecting to localhost on port 587: [WinError 1225] Удаленный компьютер отклонил это сетевое подключение
2025-09-17 22:22:14,845 [32mINFO[0m     - send-email-message | email | 4-17581369 - Processed
============================== warnings summary ===============================
.venv\Lib\site-packages\pydantic\fields.py:1093
.venv\Lib\site-packages\pydantic\fields.py:1093
.venv\Lib\site-packages\pydantic\fields.py:1093
.venv\Lib\site-packages\pydantic\fields.py:1093
  D:\pet_mail_service\.venv\Lib\site-packages\pydantic\fields.py:1093: PydanticDeprecatedSince20: Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'qe'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    warn(

tests/test_consumer.py::test_send_message[Only plain message with no subject and single user]
tests/test_consumer.py::test_send_message[Only plain message with no subject and mulitply user]
tests/test_consumer.py::test_send_message[Only plain message with subject and single user]
tests/test_consumer.py::test_send_message[Only both types of message with  subject and single user]
  D:\pet_mail_service\main.py:40: DeprecationWarning: Call to deprecated close. (Use aclose() instead) -- Deprecated since version 5.0.1.
    await redis_client.close()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED tests/test_consumer.py::test_send_message[Only plain message with no subject and single user]
FAILED tests/test_consumer.py::test_send_message[Only plain message with no subject and mulitply user]
FAILED tests/test_consumer.py::test_send_message[Only plain message with subject and single user]
FAILED tests/test_consumer.py::test_send_message[Only both types of message with  subject and single user]
======================= 4 failed, 8 warnings in 38.45s ========================
